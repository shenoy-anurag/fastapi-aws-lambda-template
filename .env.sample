# Rename this file to .env and replace the variables.

# Domain
# This would be set to the production domain with an env var on deployment
# used by the proxy of your choice such as Nginx or Traefik.
DOMAIN=localhost

FRONTEND_HOST=http://localhost:3000
# In staging and production, set this env var to the frontend host, e.g.
# FRONTEND_HOST=https://dashboard.example.com

# Environment: local, staging, serverless, production
ENVIRONMENT=local

PROJECT_NAME="fastapi-aws-lambda"

# Backend
BACKEND_CORS_ORIGINS="http://localhost,http://localhost:3000,https://localhost,https://localhost:3000"
# BACKEND_CORS_ORIGINS="http://*,https://*"

SECRET_KEY="replace this with the output of `openssl rand -hex 32`"

FIRST_SUPERUSER_FIRST_NAME=Super
FIRST_SUPERUSER_LAST_NAME=User
FIRST_SUPERUSER=admin@fastapi.aws.lambda.com
FIRST_SUPERUSER_PASSWORD="replace this with the output of `openssl rand -hex 16`"

# Postgres
POSTGRES_SERVER=localhost
POSTGRES_PORT=5432
POSTGRES_DB=fastapi_aws_lambda
POSTGRES_USER=postgres
POSTGRES_PASSWORD="replace this with the output of `openssl rand -hex 16`"

# Configure these with your own AWS ECR image repository.
DOCKER_IMAGE_BACKEND=backend
TAG=latest
